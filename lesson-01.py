# comment

'''
more
 comment
'''

"""
enother
more comments
"""

"""
1. Как объявить переменную?


"""
a = 1
print(a)

"""
2. Какие типы данных существуют в Python?

Является характеристикой и отражает:
2.1. Количество оперативной памяти
2.2. Диапозон допустимых значений
2.3. Допустимые операции
2.4. Формат отображения/представления

Типы:
1. Скалярные (простые) типы
	- int     - целые числа
	- complex - комплексные числа
	- float   - дробные
	- bool    - логические флаги
	- str     - строки
	- bytes   - байтовые строки

2. Структурные типы (сложные, составные):
	- dict   - словари
	- set    - множества
	- tuple  - кортежи
	- list   - списки
	- object - объекты
3. Специальные: None - отсутствие значения(пустое)
"""

i1 = 10
i2 = 0b100  # двоичная сист.счисл. 0 1
i3 = 0o777  # восьмеричная сист.счисл. 0, 1...7
i4 = 0x2F   # 16ричная сист.сч. 0,1...9,А,B...F

f1 = 1.23
f2 = 1e6
f3 = 123e-3

c1 = 3.14j

b1 = True
b2 = False

s1 = 'Hel"\'\\lo'
s2 = "\tPyt'hon\n"
s3 = '''
     egegergehjh
     	trtetet
'''
s4 = """
	gejgeiojgwjg\n
	jgwijgwiogj
	qrieqprp
"""
s5 = """ Hello '" world """
s6 = u''    # for Python 2
s7 = r''    # raw string сырая строка

bs1 = b'Hello'


abc = None

# tuple - кортежи
t = (1, 1.2, True, 'str', (1, 2, 3))
print(t[2]) # True

# list - списки
l = [1, 1.222, (45, 45), 'jgkf', []]

# set - множества
s1 = {1, 2, 3, 4, 3, 7}   # на выходе оставляет только уникальные не повторяющиеся значения
s2 = set() # для задания пустого множества

# dict - словари
d = {
	'key_1': 1,
	'key_2': {1, 2, 3}
}   # 